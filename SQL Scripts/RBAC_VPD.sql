
-- ==========================================
-- 1. TẠO ROLE
-- ==========================================
CREATE ROLE ROLE_NVCB; CREATE ROLE ROLE_TRGDV; CREATE ROLE ROLE_TCHC; CREATE ROLE ROLE_GV; CREATE ROLE ROLE_SV; CREATE ROLE ROLE_NV_PDT; CREATE ROLE ROLE_NV_PCTSV; CREATE ROLE ROLE_NV_PKT;
PROMPT Roles created.

-- ==========================================
-- 2. TẠO VIEW
-- ==========================================
CREATE OR REPLACE VIEW ADMIN.VW_NHANVIEN_NVCB AS SELECT * FROM ADMIN.NHANVIEN WHERE MANV = SYS_CONTEXT('USERENV', 'SESSION_USER');
CREATE OR REPLACE VIEW ADMIN.VW_NHANVIEN_TRGDV AS SELECT MANV, HOTEN, PHAI, NGSINH, ĐT, VAITRO, MAĐV FROM ADMIN.NHANVIEN WHERE MAĐV = (SELECT MAĐV FROM ADMIN.NHANVIEN WHERE MANV = SYS_CONTEXT('USERENV', 'SESSION_USER'));
CREATE OR REPLACE VIEW ADMIN.VW_MOMON_GV AS SELECT * FROM ADMIN.MOMON WHERE MAGV = SYS_CONTEXT('USERENV', 'SESSION_USER');
CREATE OR REPLACE VIEW ADMIN.VW_DANGKY_GV AS SELECT D.* FROM ADMIN.DANGKY D WHERE D.MAMM IN (SELECT MAMM FROM ADMIN.MOMON WHERE MAGV = SYS_CONTEXT('USERENV', 'SESSION_USER'));
CREATE OR REPLACE VIEW ADMIN.VW_MOMON_TRGDV AS SELECT M.* FROM ADMIN.MOMON M WHERE M.MAGV IN (SELECT MANV FROM ADMIN.NHANVIEN WHERE MAĐV = (SELECT MAĐV FROM ADMIN.NHANVIEN WHERE MANV = SYS_CONTEXT('USERENV', 'SESSION_USER')));
CREATE OR REPLACE VIEW ADMIN.VW_MOMON_SV AS SELECT M.* FROM ADMIN.MOMON M JOIN ADMIN.HOCPHAN H ON M.MAHP = H.MAHP WHERE H.MAĐV = (SELECT KHOA FROM ADMIN.SINHVIEN WHERE MASV = SYS_CONTEXT('USERENV', 'SESSION_USER'));
CREATE OR REPLACE VIEW ADMIN.VW_SINHVIEN_SV AS SELECT * FROM ADMIN.SINHVIEN WHERE MASV = SYS_CONTEXT('USERENV', 'SESSION_USER');
CREATE OR REPLACE VIEW ADMIN.VW_MOMON_PDT AS SELECT * FROM ADMIN.MOMON WHERE ((HK = 1 AND EXTRACT(MONTH FROM SYSDATE) BETWEEN 9 AND 12) OR (HK = 2 AND EXTRACT(MONTH FROM SYSDATE) BETWEEN 1 AND 4) OR (HK = 3 AND EXTRACT(MONTH FROM SYSDATE) BETWEEN 5 AND 8)) AND NAM = EXTRACT(YEAR FROM SYSDATE);
-- ==========================================
-- 3. TẠO PUBLIC SYNONYM CHO CÁC BẢNG VÀ VIEW
-- ==========================================
CREATE PUBLIC SYNONYM DONVI FOR ADMIN.DONVI;
CREATE PUBLIC SYNONYM NHANVIEN FOR ADMIN.NHANVIEN;
CREATE PUBLIC SYNONYM SINHVIEN FOR ADMIN.SINHVIEN;
CREATE PUBLIC SYNONYM HOCPHAN FOR ADMIN.HOCPHAN;
CREATE PUBLIC SYNONYM MOMON FOR ADMIN.MOMON;
CREATE PUBLIC SYNONYM DANGKY FOR ADMIN.DANGKY;
CREATE PUBLIC SYNONYM VW_NHANVIEN_NVCB FOR ADMIN.VW_NHANVIEN_NVCB;
CREATE PUBLIC SYNONYM VW_NHANVIEN_TRGDV FOR ADMIN.VW_NHANVIEN_TRGDV;
CREATE PUBLIC SYNONYM VW_MOMON_GV FOR ADMIN.VW_MOMON_GV;
CREATE PUBLIC SYNONYM VW_DANGKY_GV FOR ADMIN.VW_DANGKY_GV;
CREATE PUBLIC SYNONYM VW_MOMON_TRGDV FOR ADMIN.VW_MOMON_TRGDV;
CREATE PUBLIC SYNONYM VW_MOMON_SV FOR ADMIN.VW_MOMON_SV;
CREATE PUBLIC SYNONYM VW_MOMON_PDT FOR ADMIN.VW_MOMON_PDT;



-- ==========================================
-- 7. PHÂN QUYỀN CHO ROLE
-- ==========================================
-- Phân quyền cho ROLE_NVCB

GRANT SELECT ON ADMIN.VW_NHANVIEN_NVCB TO ROLE_NVCB;
GRANT UPDATE (ĐT) ON ADMIN.NHANVIEN TO ROLE_NVCB;

-- Gán ROLE_NVCB cho các vai trò khác
GRANT ROLE_NVCB TO ROLE_TRGDV;
GRANT ROLE_NVCB TO ROLE_TCHC;
GRANT ROLE_NVCB TO ROLE_GV;
GRANT ROLE_NVCB TO ROLE_NV_PDT;
GRANT ROLE_NVCB TO ROLE_NV_PCTSV;
GRANT ROLE_NVCB TO ROLE_NV_PKT;


-- Phân quyền cho ROLE_TRGDV
GRANT SELECT ON ADMIN.VW_NHANVIEN_TRGDV TO ROLE_TRGDV;

-- Phân quyền cho ROLE_TCHC
GRANT SELECT,INSERT, UPDATE, DELETE ON ADMIN.NHANVIEN TO ROLE_TCHC;

-- Phân quyền cho ROLE_GV
GRANT SELECT ON ADMIN.VW_MOMON_GV TO ROLE_GV;
GRANT SELECT ON ADMIN.VW_DANGKY_GV TO ROLE_GV;
GRANT SELECT ON ADMIN.SINHVIEN TO ROLE_GV;
-- Phân quyền cho ROLE_TRGDV (thêm cho MOMON)
GRANT SELECT ON ADMIN.VW_MOMON_TRGDV TO ROLE_TRGDV;

-- Phân quyền cho ROLE_SV
GRANT SELECT ON ADMIN.VW_MOMON_SV TO ROLE_SV;
GRANT SELECT ON ADMIN.VW_SINHVIEN_SV TO ROLE_SV;


-- Phân quyền cho ROLE_NV_PDT
GRANT SELECT, INSERT, UPDATE, DELETE ON ADMIN.VW_MOMON_PDT TO ROLE_NV_PDT;

-- Phân quyền cho ROLE_NV_PKT
GRANT SELECT, UPDATE ON ADMIN.DANGKY TO ROLE_NV_PKT;

-- Cấp quyền SELECT trên SINHVIEN cho role sinh viên
GRANT SELECT ON ADMIN.SINHVIEN TO ROLE_SV;

-- Cấp quyền cho ROLE_SV trên DANGKY
GRANT SELECT, INSERT, UPDATE, DELETE ON ADMIN.DANGKY TO ROLE_SV;

-- Cấp quyền cho ROLE_NV_PDT trên DANGKY
GRANT SELECT, INSERT, UPDATE, DELETE ON ADMIN.DANGKY TO ROLE_NV_PDT;

-- Cấp quyền cho ROLE_NV_PDT trên SINHVIEN
GRANT SELECT, INSERT, UPDATE, DELETE ON ADMIN.SINHVIEN TO ROLE_NV_PDT;

-- Cấp quyền cho ROLE_NV_PCTSV trên SINHVIEN
GRANT SELECT, INSERT, UPDATE, DELETE ON ADMIN.SINHVIEN TO ROLE_NV_PCTSV;

-- Cấp quyền SELECT trên DANGKY cho ROLE_GV
GRANT SELECT ON ADMIN.DANGKY TO ROLE_GV;

GRANT SELECT ON DBA_ROLE_PRIVS TO ADMIN;

-- ==========================================
-- 13. TẠO USER VÀ GÁN ROLE
-- ==========================================
BEGIN
  FOR rec IN (SELECT MANV, VAITRO FROM NHANVIEN) LOOP
    DECLARE
      user_count NUMBER;
    BEGIN
      SELECT COUNT(*) INTO user_count FROM dba_users WHERE username = rec.MANV;
      IF user_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE USER ' || rec.MANV || ' IDENTIFIED BY 123 CONTAINER=CURRENT';
        EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO ' || rec.MANV;
      ELSE
        EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' IDENTIFIED BY 123';
      END IF;

      CASE rec.VAITRO
        WHEN 'NVCB' THEN
          EXECUTE IMMEDIATE 'GRANT ROLE_NVCB TO ' || rec.MANV;
          EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' DEFAULT ROLE ROLE_NVCB';
        WHEN 'TRGĐV' THEN
          EXECUTE IMMEDIATE 'GRANT ROLE_TRGDV TO ' || rec.MANV;
          EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' DEFAULT ROLE ROLE_TRGDV';
        WHEN 'NV TCHC' THEN
          EXECUTE IMMEDIATE 'GRANT ROLE_TCHC TO ' || rec.MANV;
          EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' DEFAULT ROLE ROLE_TCHC';
        WHEN 'GV' THEN
          EXECUTE IMMEDIATE 'GRANT ROLE_GV TO ' || rec.MANV;
          EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' DEFAULT ROLE ROLE_GV';
        WHEN 'NV PĐT' THEN
          EXECUTE IMMEDIATE 'GRANT ROLE_NV_PDT TO ' || rec.MANV;
          EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' DEFAULT ROLE ROLE_NV_PDT';
        WHEN 'NV PCTSV' THEN
          EXECUTE IMMEDIATE 'GRANT ROLE_NV_PCTSV TO ' || rec.MANV;
          EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' DEFAULT ROLE ROLE_NV_PCTSV';
        WHEN 'NV PKT' THEN
          EXECUTE IMMEDIATE 'GRANT ROLE_NV_PKT TO ' || rec.MANV;
          EXECUTE IMMEDIATE 'ALTER USER ' || rec.MANV || ' DEFAULT ROLE ROLE_NV_PKT';
      END CASE;
    END;
  END LOOP;

  FOR sv IN (SELECT MASV FROM SINHVIEN) LOOP
    DECLARE
      user_count NUMBER;
    BEGIN
      SELECT COUNT(*) INTO user_count FROM dba_users WHERE username = sv.MASV;
      IF user_count = 0 THEN
        EXECUTE IMMEDIATE 'CREATE USER ' || sv.MASV || ' IDENTIFIED BY 123 CONTAINER=CURRENT';
        EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO ' || sv.MASV;
      ELSE
        EXECUTE IMMEDIATE 'ALTER USER ' || sv.MASV || ' IDENTIFIED BY 123';
      END IF;
      EXECUTE IMMEDIATE 'GRANT ROLE_SV TO ' || sv.MASV;
      EXECUTE IMMEDIATE 'ALTER USER ' || sv.MASV || ' DEFAULT ROLE ROLE_SV';
    END;
  END LOOP;
END;
/
-- ==========================================
-- 14. TẠO SYNONYM
-- ==========================================
BEGIN
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM NHANVIEN FOR ADMIN.NHANVIEN';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM SINHVIEN FOR ADMIN.SINHVIEN';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM DANGKY FOR ADMIN.DANGKY';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM MOMON FOR ADMIN.MOMON';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM HOCPHAN FOR ADMIN.HOCPHAN';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_NHANVIEN_NVCB FOR ADMIN.VW_NHANVIEN_NVCB';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_NHANVIEN_TRGDV FOR ADMIN.VW_NHANVIEN_TRGDV';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_NHANVIEN_TCHC FOR ADMIN.VW_NHANVIEN_TCHC';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_MOMON_GV FOR ADMIN.VW_MOMON_GV';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_DANGKY_GV FOR ADMIN.VW_DANGKY_GV';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_MOMON_TRGDV FOR ADMIN.VW_MOMON_TRGDV';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_MOMON_SV FOR ADMIN.VW_MOMON_SV';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_SINHVIEN_SV FOR ADMIN.VW_SINHVIEN_SV';
  EXECUTE IMMEDIATE 'CREATE OR REPLACE PUBLIC SYNONYM VW_MOMON_PDT FOR ADMIN.VW_MOMON_PDT';
END;
/

-- ==========================================
-- 7. TẠO VPD CHO SINHVIEN
-- ==========================================
CREATE OR REPLACE FUNCTION ADMIN.POLICY_SINHVIEN (
    object_schema IN VARCHAR2,
    object_name   IN VARCHAR2
) RETURN VARCHAR2 AS
    v_user   VARCHAR2(30);
    v_role   VARCHAR2(30);
    v_khoa   VARCHAR2(10);
BEGIN
    v_user := SYS_CONTEXT('USERENV', 'SESSION_USER');
    IF v_user IN ('SYS', 'ADMIN') THEN
        RETURN '1=1';
    END IF;

    BEGIN
        SELECT VAITRO, MAĐV INTO v_role, v_khoa
        FROM VW_NHANVIEN_NVCB
        WHERE MANV = v_user;
        IF v_role IN ('NV PCTSV', 'NV PĐT') THEN
            RETURN '1=1';
        ELSIF v_role = 'GV' THEN
            RETURN 'KHOA = ''' || v_khoa || '''';
        END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN NULL;
    END;

    RETURN 'MASV = ''' || v_user || '''';
END;
/

BEGIN
  DBMS_RLS.ADD_POLICY(
    object_schema   => 'ADMIN',
    object_name     => 'SINHVIEN',
    policy_name     => 'VPD_SINHVIEN',
    function_schema => 'ADMIN',
    policy_function => 'POLICY_SINHVIEN',
    statement_types => 'SELECT, INSERT, UPDATE, DELETE',
    update_check    => TRUE
  );
END;
/

-- ==========================================
-- 8. TẠO VPD CHO DANGKY
-- ==========================================

-- Xóa các chính sách VPD cũ
BEGIN
  DBMS_RLS.DROP_POLICY(
    object_schema => 'ADMIN',
    object_name   => 'DANGKY',
    policy_name   => 'VPD_DANGKY'
  );
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -28102 THEN
      DBMS_OUTPUT.PUT_LINE('Chính sách VPD_DANGKY không tồn tại, không cần xóa.');
    ELSE
      RAISE;
    END IF;
END;
/

BEGIN
  DBMS_RLS.DROP_POLICY(
    object_schema => 'ADMIN',
    object_name   => 'DANGKY',
    policy_name   => 'VPD_DANGKY_SELECT'
  );
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -28102 THEN
      DBMS_OUTPUT.PUT_LINE('Chính sách VPD_DANGKY_SELECT không tồn tại, không cần xóa.');
    ELSE
      RAISE;
    END IF;
END;
/

BEGIN
  DBMS_RLS.DROP_POLICY(
    object_schema => 'ADMIN',
    object_name   => 'DANGKY',
    policy_name   => 'VPD_DANGKY_MODIFY'
  );
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -28102 THEN
      DBMS_OUTPUT.PUT_LINE('Chính sách VPD_DANGKY_MODIFY không tồn tại, không cần xóa.');
    ELSE
      RAISE;
    END IF;
END;
/

-- Tạo hàm VPD cho SELECT
CREATE OR REPLACE FUNCTION ADMIN.POLICY_DANGKY_SELECT (
    object_schema IN VARCHAR2,
    object_name   IN VARCHAR2
) RETURN VARCHAR2 AS
  v_user    VARCHAR2(30);
  v_role    VARCHAR2(30);
  v_is_sv   NUMBER := 0;
BEGIN
  v_user := SYS_CONTEXT('USERENV', 'SESSION_USER');
  IF v_user IN ('SYS', 'ADMIN') THEN
    RETURN '1=1';
  END IF;

  -- Kiểm tra vai trò nhân viên trước
  BEGIN
    SELECT VAITRO INTO v_role
    FROM ADMIN.NHANVIEN
    WHERE MANV = v_user;
    IF v_role = 'NV PKT' THEN
      RETURN '1=1';
    ELSIF v_role = 'NV PĐT' THEN
      RETURN '1=1';
    ELSIF v_role = 'GV' THEN
      RETURN 'MAMM IN (SELECT MAMM FROM ADMIN.MOMON WHERE MAGV = ''' || v_user || ''')';
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
  END;

  -- Kiểm tra sinh viên
  SELECT COUNT(*) INTO v_is_sv FROM ADMIN.SINHVIEN WHERE MASV = v_user;
  IF v_is_sv = 1 THEN
    RETURN 'MASV = ''' || v_user || '''';
  END IF;

  RETURN '1=0';
END;
/

-- Tạo hàm VPD cho INSERT, UPDATE, DELETE
CREATE OR REPLACE FUNCTION ADMIN.POLICY_DANGKY_MODIFY (
    object_schema IN VARCHAR2,
    object_name   IN VARCHAR2
) RETURN VARCHAR2 AS
  v_user    VARCHAR2(30);
  v_role    VARCHAR2(30);
  v_today   DATE := SYSDATE;
  v_is_sv   NUMBER := 0;
  v_ok_hk   NUMBER := 0;
BEGIN
  v_user := SYS_CONTEXT('USERENV', 'SESSION_USER');
  IF v_user IN ('SYS', 'ADMIN') THEN
    RETURN '1=1';
  END IF;

  -- Kiểm tra vai trò nhân viên trước
  BEGIN
    SELECT VAITRO INTO v_role
    FROM ADMIN.NHANVIEN
    WHERE MANV = v_user;
    IF v_role = 'NV PKT' THEN
      RETURN '1=1';
    ELSIF v_role = 'NV PĐT' THEN
      -- Kiểm tra 14 ngày đầu học kỳ
      SELECT COUNT(*) INTO v_ok_hk
      FROM ADMIN.MOMON
      WHERE NAM IS NOT NULL
      AND (
        (HK = 1 AND v_today BETWEEN TO_DATE('01-SEP-' || NAM, 'DD-MON-YYYY') 
            AND TO_DATE('14-SEP-' || NAM, 'DD-MON-YYYY')) OR
        (HK = 2 AND v_today BETWEEN TO_DATE('01-JAN-' || NAM, 'DD-MON-YYYY') 
            AND TO_DATE('14-JAN-' || NAM, 'DD-MON-YYYY')) OR
        (HK = 3 AND v_today BETWEEN TO_DATE('01-MAY-' || NAM, 'DD-MON-YYYY') 
            AND TO_DATE('14-MAY-' || NAM, 'DD-MON-YYYY'))
      );
      IF v_ok_hk > 0 THEN
        RETURN 'ĐIEMTH IS NULL AND ĐIEMQT IS NULL AND ĐIEMCK IS NULL AND ĐIEMTK IS NULL';
      ELSE
        RETURN '1=0';
      END IF;
    ELSIF v_role = 'GV' THEN
      RETURN 'MAMM IN (SELECT MAMM FROM ADMIN.MOMON WHERE MAGV = ''' || v_user || ''')';
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
  END;

  -- Kiểm tra sinh viên
  SELECT COUNT(*) INTO v_is_sv FROM ADMIN.SINHVIEN WHERE MASV = v_user;
  IF v_is_sv = 1 THEN
    SELECT COUNT(*) INTO v_ok_hk
    FROM ADMIN.MOMON
    WHERE NAM IS NOT NULL
    AND (
      (HK = 1 AND v_today BETWEEN TO_DATE('01-SEP-' || NAM, 'DD-MON-YYYY') 
          AND TO_DATE('14-SEP-' || NAM, 'DD-MON-YYYY')) OR
      (HK = 2 AND v_today BETWEEN TO_DATE('01-JAN-' || NAM, 'DD-MON-YYYY') 
          AND TO_DATE('14-JAN-' || NAM, 'DD-MON-YYYY')) OR
      (HK = 3 AND v_today BETWEEN TO_DATE('01-MAY-' || NAM, 'DD-MON-YYYY') 
          AND TO_DATE('14-MAY-' || NAM, 'DD-MON-YYYY'))
    );
    IF v_ok_hk > 0 THEN
      RETURN 'MASV = ''' || v_user || ''' AND ĐIEMTH IS NULL AND ĐIEMQT IS NULL AND ĐIEMCK IS NULL AND ĐIEMTK IS NULL';
    ELSE
      RETURN '1=0';
    END IF;
  END IF;

  RETURN '1=0';
END;
/

-- Áp dụng VPD cho SELECT
BEGIN
  DBMS_RLS.ADD_POLICY(
    object_schema   => 'ADMIN',
    object_name     => 'DANGKY',
    policy_name     => 'VPD_DANGKY_SELECT',
    function_schema => 'ADMIN',
    policy_function => 'POLICY_DANGKY_SELECT',
    statement_types => 'SELECT',
    update_check    => TRUE
  );
END;
/

-- Áp dụng VPD cho INSERT, UPDATE, DELETE
BEGIN
  DBMS_RLS.ADD_POLICY(
    object_schema   => 'ADMIN',
    object_name     => 'DANGKY',
    policy_name     => 'VPD_DANGKY_MODIFY',
    function_schema => 'ADMIN',
    policy_function => 'POLICY_DANGKY_MODIFY',
    statement_types => 'INSERT, UPDATE, DELETE',
    update_check    => TRUE
  );
END;
/

-- Thêm VPD column-level để ngăn NV PĐT thao tác trên các cột điểm
CREATE OR REPLACE FUNCTION ADMIN.POLICY_DANGKY_DIEM (
    object_schema IN VARCHAR2,
    object_name   IN VARCHAR2
) RETURN VARCHAR2 AS
  v_user    VARCHAR2(30);
  v_role    VARCHAR2(30);
BEGIN
  v_user := SYS_CONTEXT('USERENV', 'SESSION_USER');
  IF v_user IN ('SYS', 'ADMIN') THEN
    RETURN '1=1';
  END IF;

  BEGIN
    SELECT VAITRO INTO v_role
    FROM ADMIN.NHANVIEN
    WHERE MANV = v_user;
    IF v_role = 'NV PĐT' THEN
      RETURN '1=0'; -- Ngăn NV PĐT thao tác trên các cột điểm
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN NULL;
  END;

  RETURN '1=1';
END;
/

-- Áp dụng VPD column-level cho các cột điểm
-- Xóa chính sách cũ nếu tồn tại
BEGIN
  DBMS_RLS.DROP_POLICY(
    object_schema => 'ADMIN',
    object_name   => 'DANGKY',
    policy_name   => 'VPD_DANGKY_DIEM'
  );
EXCEPTION
  WHEN OTHERS THEN
    IF SQLCODE = -28102 THEN
      DBMS_OUTPUT.PUT_LINE('Chính sách VPD_DANGKY_DIEM không tồn tại, không cần xóa.');
    ELSE
      RAISE;
    END IF;
END;
/

-- Áp dụng VPD column-level cho các cột điểm mà không chỉ định statement_types
BEGIN
  DBMS_RLS.ADD_POLICY(
    object_schema         => 'ADMIN',
    object_name           => 'DANGKY',
    policy_name           => 'VPD_DANGKY_DIEM',
    function_schema       => 'ADMIN',
    policy_function       => 'POLICY_DANGKY_DIEM',
    sec_relevant_cols     => 'ĐIEMTH, ĐIEMQT, ĐIEMCK, ĐIEMTK',
    sec_relevant_cols_opt => DBMS_RLS.ALL_ROWS
  );
END;
/






